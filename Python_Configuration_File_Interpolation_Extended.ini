# Python Configuration File Parser
# configparser — Configuration file parser
# This module provides the ConfigParser class which implements a basic configuration language which provides a structure similar to what’s found in
# Microsoft Windows INI files. You can use this to write Python programs which can be customized by end users easily.
#
# class configparser.ExtendedInterpolation 
# An alternative handler for interpolation which implements a more advanced syntax, used for instance in zc.buildout.
# Extended interpolation is using ${section:option} to denote a value from a foreign section.
# Interpolation can span multiple levels.
# For convenience, if the section: part is omitted, interpolation defaults to the current section (and possibly the default values from the special section).
# 
# For example, the configuration specified above with basic interpolation, would look like this with extended interpolation:
# 

[Paths]

home_dir: /Users
my_dir: ${home_dir}/lumberjack
my_pictures: ${my_dir}/Pictures

#  
# Values from other sections can be fetched as well:
# 

[Common]

home_dir: /Users
library_dir: /Library
system_dir: /System
macports_dir: /opt/local

[Frameworks]

Python: 3.2
path: ${Common:system_dir}/Library/Frameworks/

[Arthur]

nickname: Two Sheds
last_name: Jackson
my_dir: ${Common:home_dir}/twosheds
my_pictures: ${my_dir}/Pictures
python_dir: ${Frameworks:path}/Python/Versions/${Frameworks:Python}
